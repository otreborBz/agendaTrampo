{
    "sourceFile": "src/screen/intro/intro.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1758642496633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1758642503177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+import React, { useEffect, useRef } from 'react';\r\n+import { View, Text, TouchableOpacity, Animated, Easing, Dimensions } from 'react-native';\r\n+import { useNavigation } from '@react-navigation/native';\r\n+\r\n+import styles from '.styles/';\r\n+\r\n+const { height } = Dimensions.get('window');\r\n+\r\n+export default function Intro(){\r\n+    const navigation = useNavigation();\r\n+    const fallAnim = useRef(new Animated.Value(-height)).current;\r\n+    const opacityAnim = useRef(new Animated.Value(0)).current;\r\n+\r\n+    useEffect(() => {\r\n+        // Fade in rápido\r\n+        Animated.timing(opacityAnim, {\r\n+            toValue: 1,\r\n+            duration: 200,\r\n+            useNativeDriver: true,\r\n+        }).start();\r\n+\r\n+        // Animação de queda com bounce\r\n+        Animated.spring(fallAnim, {\r\n+            toValue: 0,\r\n+            tension: 30,    \r\n+            friction: 7,   \r\n+            useNativeDriver: true,\r\n+        }).start();\r\n+    }, []);\r\n+\r\n+    function goToScreen(){\r\n+        navigation.replace('Login');\r\n+    }\r\n+\r\n+    return(\r\n+        <View style={styles.container}>\r\n+            <Animated.Image \r\n+                source={require('../../image/logo/iconName.png')} \r\n+                style={[\r\n+                    styles.logo,\r\n+                    {\r\n+                        opacity: opacityAnim,\r\n+                        transform: [\r\n+                            { translateY: fallAnim }\r\n+                        ]\r\n+                    }\r\n+                ]} \r\n+            />\r\n+            <View style={styles.buttonContainer}>\r\n+                <TouchableOpacity style={styles.button} onPress={goToScreen}>\r\n+                    <Text style={ styles.buttonText}>Continuar</Text>\r\n+                </TouchableOpacity>\r\n+                <TouchableOpacity>\r\n+                    <Text style={styles.buttonContainerText}> CodeBr | Roberto Carvalho</Text>\r\n+                </TouchableOpacity>\r\n+                \r\n+            </View>\r\n+        </View>\r\n+    )\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1758642514527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useEffect, useRef } from 'react';\r\n import { View, Text, TouchableOpacity, Animated, Easing, Dimensions } from 'react-native';\r\n import { useNavigation } from '@react-navigation/native';\r\n \r\n-import styles from '.styles/';\r\n+import styles from '.styles';\r\n \r\n const { height } = Dimensions.get('window');\r\n \r\n export default function Intro(){\r\n@@ -56,65 +56,5 @@\n                 \r\n             </View>\r\n         </View>\r\n     )\r\n-}\n-import React, { useEffect, useRef } from 'react';\r\n-import { View, Text, TouchableOpacity, Animated, Easing, Dimensions } from 'react-native';\r\n-import { useNavigation } from '@react-navigation/native';\r\n-\r\n-import styles from './';\r\n-\r\n-const { height } = Dimensions.get('window');\r\n-\r\n-export default function Intro(){\r\n-    const navigation = useNavigation();\r\n-    const fallAnim = useRef(new Animated.Value(-height)).current;\r\n-    const opacityAnim = useRef(new Animated.Value(0)).current;\r\n-\r\n-    useEffect(() => {\r\n-        // Fade in rápido\r\n-        Animated.timing(opacityAnim, {\r\n-            toValue: 1,\r\n-            duration: 200,\r\n-            useNativeDriver: true,\r\n-        }).start();\r\n-\r\n-        // Animação de queda com bounce\r\n-        Animated.spring(fallAnim, {\r\n-            toValue: 0,\r\n-            tension: 30,    \r\n-            friction: 7,   \r\n-            useNativeDriver: true,\r\n-        }).start();\r\n-    }, []);\r\n-\r\n-    function goToScreen(){\r\n-        navigation.replace('Login');\r\n-    }\r\n-\r\n-    return(\r\n-        <View style={styles.container}>\r\n-            <Animated.Image \r\n-                source={require('../../image/logo/iconName.png')} \r\n-                style={[\r\n-                    styles.logo,\r\n-                    {\r\n-                        opacity: opacityAnim,\r\n-                        transform: [\r\n-                            { translateY: fallAnim }\r\n-                        ]\r\n-                    }\r\n-                ]} \r\n-            />\r\n-            <View style={styles.buttonContainer}>\r\n-                <TouchableOpacity style={styles.button} onPress={goToScreen}>\r\n-                    <Text style={ styles.buttonText}>Continuar</Text>\r\n-                </TouchableOpacity>\r\n-                <TouchableOpacity>\r\n-                    <Text style={styles.buttonContainerText}> CodeBr | Roberto Carvalho</Text>\r\n-                </TouchableOpacity>\r\n-                \r\n-            </View>\r\n-        </View>\r\n-    )\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1758642523048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+import React, { useEffect, useRef } from 'react';\r\n+import { View, Text, TouchableOpacity, Animated, Easing, Dimensions } from 'react-native';\r\n+import { useNavigation } from '@react-navigation/native';\r\n+\r\n+import styles from '.';\r\n+\r\n+const { height } = Dimensions.get('window');\r\n+\r\n+export default function Intro(){\r\n+    const navigation = useNavigation();\r\n+    const fallAnim = useRef(new Animated.Value(-height)).current;\r\n+    const opacityAnim = useRef(new Animated.Value(0)).current;\r\n+\r\n+    useEffect(() => {\r\n+        // Fade in rápido\r\n+        Animated.timing(opacityAnim, {\r\n+            toValue: 1,\r\n+            duration: 200,\r\n+            useNativeDriver: true,\r\n+        }).start();\r\n+\r\n+        // Animação de queda com bounce\r\n+        Animated.spring(fallAnim, {\r\n+            toValue: 0,\r\n+            tension: 30,    \r\n+            friction: 7,   \r\n+            useNativeDriver: true,\r\n+        }).start();\r\n+    }, []);\r\n+\r\n+    function goToScreen(){\r\n+        navigation.replace('Login');\r\n+    }\r\n+\r\n+    return(\r\n+        <View style={styles.container}>\r\n+            <Animated.Image \r\n+                source={require('../../image/logo/iconName.png')} \r\n+                style={[\r\n+                    styles.logo,\r\n+                    {\r\n+                        opacity: opacityAnim,\r\n+                        transform: [\r\n+                            { translateY: fallAnim }\r\n+                        ]\r\n+                    }\r\n+                ]} \r\n+            />\r\n+            <View style={styles.buttonContainer}>\r\n+                <TouchableOpacity style={styles.button} onPress={goToScreen}>\r\n+                    <Text style={ styles.buttonText}>Continuar</Text>\r\n+                </TouchableOpacity>\r\n+                <TouchableOpacity>\r\n+                    <Text style={styles.buttonContainerText}> CodeBr | Roberto Carvalho</Text>\r\n+                </TouchableOpacity>\r\n+                \r\n+            </View>\r\n+        </View>\r\n+    )\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1758642555987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+import React, { useEffect, useRef } from 'react';\r\n+import { View, Text, TouchableOpacity, Animated, Easing, Dimensions } from 'react-native';\r\n+import { useNavigation } from '@react-navigation/native';\r\n+\r\n+import styles from './styles';\r\n+\r\n+const { height } = Dimensions.get('window');\r\n+\r\n+export default function Intro(){\r\n+    const navigation = useNavigation();\r\n+    const fallAnim = useRef(new Animated.Value(-height)).current;\r\n+    const opacityAnim = useRef(new Animated.Value(0)).current;\r\n+\r\n+    useEffect(() => {\r\n+        // Fade in rápido\r\n+        Animated.timing(opacityAnim, {\r\n+            toValue: 1,\r\n+            duration: 200,\r\n+            useNativeDriver: true,\r\n+        }).start();\r\n+\r\n+        // Animação de queda com bounce\r\n+        Animated.spring(fallAnim, {\r\n+            toValue: 0,\r\n+            tension: 30,    \r\n+            friction: 7,   \r\n+            useNativeDriver: true,\r\n+        }).start();\r\n+    }, []);\r\n+\r\n+    function goToScreen(){\r\n+        navigation.replace('Login');\r\n+    }\r\n+\r\n+    return(\r\n+        <View style={styles.container}>\r\n+            <Animated.Image \r\n+                source={require('../')} \r\n+                style={[\r\n+                    styles.logo,\r\n+                    {\r\n+                        opacity: opacityAnim,\r\n+                        transform: [\r\n+                            { translateY: fallAnim }\r\n+                        ]\r\n+                    }\r\n+                ]} \r\n+            />\r\n+            <View style={styles.buttonContainer}>\r\n+                <TouchableOpacity style={styles.button} onPress={goToScreen}>\r\n+                    <Text style={ styles.buttonText}>Continuar</Text>\r\n+                </TouchableOpacity>\r\n+                <TouchableOpacity>\r\n+                    <Text style={styles.buttonContainerText}> CodeBr | Roberto Carvalho</Text>\r\n+                </TouchableOpacity>\r\n+                \r\n+            </View>\r\n+        </View>\r\n+    )\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1758642563633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n \r\n     return(\r\n         <View style={styles.container}>\r\n             <Animated.Image \r\n-                source={require('../../')} \r\n+                source={require('../../../')} \r\n                 style={[\r\n                     styles.logo,\r\n                     {\r\n                         opacity: opacityAnim,\r\n"
                },
                {
                    "date": 1758642573570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+import React, { useEffect, useRef } from 'react';\r\n+import { View, Text, TouchableOpacity, Animated, Easing, Dimensions } from 'react-native';\r\n+import { useNavigation } from '@react-navigation/native';\r\n+\r\n+import styles from './styles';\r\n+\r\n+const { height } = Dimensions.get('window');\r\n+\r\n+export default function Intro(){\r\n+    const navigation = useNavigation();\r\n+    const fallAnim = useRef(new Animated.Value(-height)).current;\r\n+    const opacityAnim = useRef(new Animated.Value(0)).current;\r\n+\r\n+    useEffect(() => {\r\n+        // Fade in rápido\r\n+        Animated.timing(opacityAnim, {\r\n+            toValue: 1,\r\n+            duration: 200,\r\n+            useNativeDriver: true,\r\n+        }).start();\r\n+\r\n+        // Animação de queda com bounce\r\n+        Animated.spring(fallAnim, {\r\n+            toValue: 0,\r\n+            tension: 30,    \r\n+            friction: 7,   \r\n+            useNativeDriver: true,\r\n+        }).start();\r\n+    }, []);\r\n+\r\n+    function goToScreen(){\r\n+        navigation.replace('Login');\r\n+    }\r\n+\r\n+    return(\r\n+        <View style={styles.container}>\r\n+            <Animated.Image \r\n+                source={require('../../../assets')} \r\n+                style={[\r\n+                    styles.logo,\r\n+                    {\r\n+                        opacity: opacityAnim,\r\n+                        transform: [\r\n+                            { translateY: fallAnim }\r\n+                        ]\r\n+                    }\r\n+                ]} \r\n+            />\r\n+            <View style={styles.buttonContainer}>\r\n+                <TouchableOpacity style={styles.button} onPress={goToScreen}>\r\n+                    <Text style={ styles.buttonText}>Continuar</Text>\r\n+                </TouchableOpacity>\r\n+                <TouchableOpacity>\r\n+                    <Text style={styles.buttonContainerText}> CodeBr | Roberto Carvalho</Text>\r\n+                </TouchableOpacity>\r\n+                \r\n+            </View>\r\n+        </View>\r\n+    )\r\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1758642496633,
            "name": "Commit-0",
            "content": "import React, { useEffect, useRef } from 'react';\r\nimport { View, Text, TouchableOpacity, Animated, Easing, Dimensions } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport styles from './';\r\n\r\nconst { height } = Dimensions.get('window');\r\n\r\nexport default function Intro(){\r\n    const navigation = useNavigation();\r\n    const fallAnim = useRef(new Animated.Value(-height)).current;\r\n    const opacityAnim = useRef(new Animated.Value(0)).current;\r\n\r\n    useEffect(() => {\r\n        // Fade in rápido\r\n        Animated.timing(opacityAnim, {\r\n            toValue: 1,\r\n            duration: 200,\r\n            useNativeDriver: true,\r\n        }).start();\r\n\r\n        // Animação de queda com bounce\r\n        Animated.spring(fallAnim, {\r\n            toValue: 0,\r\n            tension: 30,    \r\n            friction: 7,   \r\n            useNativeDriver: true,\r\n        }).start();\r\n    }, []);\r\n\r\n    function goToScreen(){\r\n        navigation.replace('Login');\r\n    }\r\n\r\n    return(\r\n        <View style={styles.container}>\r\n            <Animated.Image \r\n                source={require('../../image/logo/iconName.png')} \r\n                style={[\r\n                    styles.logo,\r\n                    {\r\n                        opacity: opacityAnim,\r\n                        transform: [\r\n                            { translateY: fallAnim }\r\n                        ]\r\n                    }\r\n                ]} \r\n            />\r\n            <View style={styles.buttonContainer}>\r\n                <TouchableOpacity style={styles.button} onPress={goToScreen}>\r\n                    <Text style={ styles.buttonText}>Continuar</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity>\r\n                    <Text style={styles.buttonContainerText}> CodeBr | Roberto Carvalho</Text>\r\n                </TouchableOpacity>\r\n                \r\n            </View>\r\n        </View>\r\n    )\r\n}"
        }
    ]
}