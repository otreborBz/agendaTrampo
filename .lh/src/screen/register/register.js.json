{
    "sourceFile": "src/screen/register/register.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1758645114731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1758645131187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         message={alertInfo.message}\r\n         onClose={() => setAlertVisible(false)}\r\n       />\r\n       <Image\r\n-        source={require(\"../../\")}\r\n+        source={require(\"../../.\")}\r\n         style={styles.logo}\r\n       />\r\n       <Text style={styles.screenTitle}>Crie sua conta</Text>\r\n \r\n"
                },
                {
                    "date": 1758645137630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,138 @@\n+import React, { useState, useContext } from \"react\";\r\n+import {\r\n+  View,\r\n+  Text,\r\n+  TextInput,\r\n+  Image,\r\n+  TouchableOpacity,\r\n+  KeyboardAvoidingView,\r\n+  Platform,\r\n+  ActivityIndicator\r\n+} from \"react-native\";\r\n+import { useNavigation } from \"@react-navigation/native\";\r\n+\r\n+import styles from \"./styles\";\r\n+import { AuthContext } from \"../../contexts/auth\";\r\n+import CustomAlert from \"../../components/customAlert/CustomAlert\";\r\n+\r\n+export default function Register() {\r\n+  const { signUp, loading } = useContext(AuthContext);\r\n+  const navigation = useNavigation();\r\n+\r\n+  const [loadingRegister, setLoadingRegister] = useState(loading);\r\n+\r\n+  const [name, setName] = useState(\"\");\r\n+  const [email, setEmail] = useState(\"\");\r\n+  const [password, setPassword] = useState(\"\");\r\n+\r\n+  // Estado para o alerta customizado\r\n+  const [alertVisible, setAlertVisible] = useState(false);\r\n+  const [alertInfo, setAlertInfo] = useState({ title: \"\", message: \"\" });\r\n+\r\n+  const showAlert = (title, message) => {\r\n+    setAlertInfo({ title, message });\r\n+    setAlertVisible(true);\r\n+  };\r\n+\r\n+  // Função para o cadastro\r\n+  async function handleRegister() {\r\n+    setLoadingRegister(true);\r\n+    if (name === \"\" || email === \"\" || password === \"\") {\r\n+      showAlert(\"Atenção\", \"Por favor, preencha todos os campos!\");\r\n+      setLoadingRegister(false);\r\n+      return;\r\n+    }\r\n+    try {\r\n+      const result = await signUp(name, email, password);\r\n+      if (!result.success) {\r\n+        setAlertInfo({ title: \"Erro\", message: result.message });\r\n+        setAlertVisible(true);\r\n+      }\r\n+    } catch (error) {\r\n+      setAlertInfo({ title: \"Erro\", message: error.message });\r\n+      setAlertVisible(true);\r\n+    }\r\n+    finally{\r\n+      setLoadingRegister(false);\r\n+    }\r\n+  }\r\n+  // Função para navegar de volta para a tela de login\r\n+  function goToLogin() {\r\n+    navigation.goBack(\"Login\");\r\n+  }\r\n+\r\n+  return (\r\n+    <KeyboardAvoidingView\r\n+      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n+      style={styles.container}\r\n+    >\r\n+      <CustomAlert\r\n+        visible={alertVisible}\r\n+        title={alertInfo.title}\r\n+        message={alertInfo.message}\r\n+        onClose={() => setAlertVisible(false)}\r\n+      />\r\n+      <Image\r\n+        source={require(\"../../../assets\")}\r\n+        style={styles.logo}\r\n+      />\r\n+      <Text style={styles.screenTitle}>Crie sua conta</Text>\r\n+\r\n+      <View style={styles.inputContainer}>\r\n+        <TextInput\r\n+          value={name}\r\n+          onChangeText={(text) => setName(text)}\r\n+          placeholder=\"Nome completo\"\r\n+          style={styles.textInput}\r\n+          autoCapitalize=\"words\"\r\n+          autoCorrect={false}\r\n+        />\r\n+        <TextInput\r\n+          value={email}\r\n+          onChangeText={(text) => setEmail(text)}\r\n+          placeholder=\"Email\"\r\n+          style={styles.textInput}\r\n+          keyboardType=\"email-address\"\r\n+          autoCapitalize=\"none\"\r\n+          autoCorrect={false}\r\n+        />\r\n+        <TextInput\r\n+          value={password}\r\n+          onChangeText={(text) => setPassword(text)}\r\n+          placeholder=\"Senha\"\r\n+          style={styles.textInput}\r\n+          secureTextEntry={true}\r\n+          autoCapitalize=\"none\"\r\n+        />\r\n+        <Text style={styles.passwordHintText}>\r\n+          A senha deve ter no mínimo 8 caracteres, incluindo letras maiúsculas, minúsculas e números.\r\n+        </Text>\r\n+\r\n+        <TouchableOpacity\r\n+          onPress={handleRegister}\r\n+          style={styles.button}\r\n+          activeOpacity={0.8}\r\n+        >\r\n+          {\r\n+            loadingRegister ? (\r\n+              <ActivityIndicator size=\"small\" color=\"#FFF\" />\r\n+            ) : (\r\n+              <Text style={styles.textButton}>Cadastrar</Text>\r\n+            )\r\n+          }\r\n+        </TouchableOpacity>\r\n+      </View>\r\n+\r\n+      <View style={styles.buttonContainer}>\r\n+        <Text style={styles.textButtonLogin}>Já tem uma conta?</Text>\r\n+        <TouchableOpacity onPress={goToLogin} activeOpacity={0.7}>\r\n+          <Text style={styles.textButtonLoginLink}>Faça login</Text>\r\n+        </TouchableOpacity>\r\n+      </View>\r\n+\r\n+      <TouchableOpacity style={styles.buttonTerms} activeOpacity={0.7}>\r\n+        <Text style={styles.textButtonTerms}>Termos de uso</Text>\r\n+      </TouchableOpacity>\r\n+    </KeyboardAvoidingView>\r\n+  );\r\n+}\r\n"
                }
            ],
            "date": 1758645114731,
            "name": "Commit-0",
            "content": "import React, { useState, useContext } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  Image,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  ActivityIndicator\r\n} from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nimport styles from \"./styles\";\r\nimport { AuthContext } from \"../../contexts/auth\";\r\nimport CustomAlert from \"../../components/customAlert/CustomAlert\";\r\n\r\nexport default function Register() {\r\n  const { signUp, loading } = useContext(AuthContext);\r\n  const navigation = useNavigation();\r\n\r\n  const [loadingRegister, setLoadingRegister] = useState(loading);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  // Estado para o alerta customizado\r\n  const [alertVisible, setAlertVisible] = useState(false);\r\n  const [alertInfo, setAlertInfo] = useState({ title: \"\", message: \"\" });\r\n\r\n  const showAlert = (title, message) => {\r\n    setAlertInfo({ title, message });\r\n    setAlertVisible(true);\r\n  };\r\n\r\n  // Função para o cadastro\r\n  async function handleRegister() {\r\n    setLoadingRegister(true);\r\n    if (name === \"\" || email === \"\" || password === \"\") {\r\n      showAlert(\"Atenção\", \"Por favor, preencha todos os campos!\");\r\n      setLoadingRegister(false);\r\n      return;\r\n    }\r\n    try {\r\n      const result = await signUp(name, email, password);\r\n      if (!result.success) {\r\n        setAlertInfo({ title: \"Erro\", message: result.message });\r\n        setAlertVisible(true);\r\n      }\r\n    } catch (error) {\r\n      setAlertInfo({ title: \"Erro\", message: error.message });\r\n      setAlertVisible(true);\r\n    }\r\n    finally{\r\n      setLoadingRegister(false);\r\n    }\r\n  }\r\n  // Função para navegar de volta para a tela de login\r\n  function goToLogin() {\r\n    navigation.goBack(\"Login\");\r\n  }\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n      style={styles.container}\r\n    >\r\n      <CustomAlert\r\n        visible={alertVisible}\r\n        title={alertInfo.title}\r\n        message={alertInfo.message}\r\n        onClose={() => setAlertVisible(false)}\r\n      />\r\n      <Image\r\n        source={require(\"../../image/logo/iconName.png\")}\r\n        style={styles.logo}\r\n      />\r\n      <Text style={styles.screenTitle}>Crie sua conta</Text>\r\n\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          value={name}\r\n          onChangeText={(text) => setName(text)}\r\n          placeholder=\"Nome completo\"\r\n          style={styles.textInput}\r\n          autoCapitalize=\"words\"\r\n          autoCorrect={false}\r\n        />\r\n        <TextInput\r\n          value={email}\r\n          onChangeText={(text) => setEmail(text)}\r\n          placeholder=\"Email\"\r\n          style={styles.textInput}\r\n          keyboardType=\"email-address\"\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n        />\r\n        <TextInput\r\n          value={password}\r\n          onChangeText={(text) => setPassword(text)}\r\n          placeholder=\"Senha\"\r\n          style={styles.textInput}\r\n          secureTextEntry={true}\r\n          autoCapitalize=\"none\"\r\n        />\r\n        <Text style={styles.passwordHintText}>\r\n          A senha deve ter no mínimo 8 caracteres, incluindo letras maiúsculas, minúsculas e números.\r\n        </Text>\r\n\r\n        <TouchableOpacity\r\n          onPress={handleRegister}\r\n          style={styles.button}\r\n          activeOpacity={0.8}\r\n        >\r\n          {\r\n            loadingRegister ? (\r\n              <ActivityIndicator size=\"small\" color=\"#FFF\" />\r\n            ) : (\r\n              <Text style={styles.textButton}>Cadastrar</Text>\r\n            )\r\n          }\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={styles.buttonContainer}>\r\n        <Text style={styles.textButtonLogin}>Já tem uma conta?</Text>\r\n        <TouchableOpacity onPress={goToLogin} activeOpacity={0.7}>\r\n          <Text style={styles.textButtonLoginLink}>Faça login</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <TouchableOpacity style={styles.buttonTerms} activeOpacity={0.7}>\r\n        <Text style={styles.textButtonTerms}>Termos de uso</Text>\r\n      </TouchableOpacity>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n"
        }
    ]
}