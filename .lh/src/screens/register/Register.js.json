{
    "sourceFile": "src/screens/register/Register.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1759367537833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1759367550711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n         <TextInput\r\n           value={name}\r\n           onChangeText={(text) => setName(text)}\r\n           placeholder=\"Nome completo\"\r\n-          \r\n+          placeholderTextColor={\"#869ab0\"}\r\n           style={styles.textInput}\r\n           autoCapitalize=\"words\"\r\n           autoCorrect={false}\r\n         />\r\n"
                },
                {
                    "date": 1759367561821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,8 +91,9 @@\n         <TextInput\r\n           value={email}\r\n           onChangeText={(text) => setEmail(text)}\r\n           placeholder=\"Email\"\r\n+          placeholderTextColor={\"#869ab0\"}\r\n           style={styles.textInput}\r\n           keyboardType=\"email-address\"\r\n           autoCapitalize=\"none\"\r\n           autoCorrect={false}\r\n"
                },
                {
                    "date": 1759369856702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n+import { Ionicons } from \"@expo/vector-icons\";\r\n import { useNavigation } from \"@react-navigation/native\";\r\n-import { useContext, useState } from \"react\";\r\n+import { useContext, useState, useCallback } from \"react\";\r\n import {\r\n   ActivityIndicator,\r\n   Image,\r\n   KeyboardAvoidingView,\r\n@@ -28,8 +29,11 @@\n   // Estado para o alerta customizado\r\n   const [alertVisible, setAlertVisible] = useState(false);\r\n   const [alertInfo, setAlertInfo] = useState({ title: \"\", message: \"\" });\r\n \r\n+  // Estado para o aceite dos termos\r\n+  const [termsAccepted, setTermsAccepted] = useState(false);\r\n+\r\n   const showAlert = (title, message) => {\r\n     setAlertInfo({ title, message });\r\n     setAlertVisible(true);\r\n   };\r\n@@ -41,8 +45,13 @@\n       showAlert(\"Atenção\", \"Por favor, preencha todos os campos!\");\r\n       setLoadingRegister(false);\r\n       return;\r\n     }\r\n+    if (!termsAccepted) {\r\n+      showAlert(\"Atenção\", \"Você deve aceitar os Termos de Uso e a Política de Privacidade para continuar.\");\r\n+      setLoadingRegister(false);\r\n+      return;\r\n+    }\r\n     try {\r\n       const result = await signUp(name, email, password);\r\n       if (!result.success) {\r\n         setAlertInfo({ title: \"Erro\", message: result.message });\r\n@@ -56,12 +65,16 @@\n       setLoadingRegister(false);\r\n     }\r\n   }\r\n   // Função para navegar de volta para a tela de login\r\n-  function goToLogin() {\r\n+  const goToLogin = useCallback(() => {\r\n     navigation.goBack(\"Login\");\r\n-  }\r\n+  }, [navigation]);\r\n \r\n+  const goToTerms = useCallback(() => {\r\n+    navigation.navigate(\"Terms\");\r\n+  }, [navigation]);\r\n+\r\n   return (\r\n     <KeyboardAvoidingView\r\n       behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n       style={styles.container}\r\n@@ -110,16 +123,29 @@\n         <Text style={styles.passwordHintText}>\r\n           A senha deve ter no mínimo 8 caracteres, incluindo letras maiúsculas, minúsculas e números.\r\n         </Text>\r\n \r\n+        <View style={styles.termsContainer}>\r\n+          <TouchableOpacity onPress={() => setTermsAccepted(!termsAccepted)} style={styles.checkbox}>\r\n+            {termsAccepted && <Ionicons name=\"checkmark\" size={20} color={styles.checkbox.checkedColor} />}\r\n+          </TouchableOpacity>\r\n+          <View style={styles.termsTextContainer}>\r\n+            <Text style={styles.termsText}>Eu li e concordo com os </Text>\r\n+            <TouchableOpacity onPress={goToTerms}>\r\n+              <Text style={styles.termsLink}>Termos de Uso</Text>\r\n+            </TouchableOpacity>\r\n+          </View>\r\n+        </View>\r\n+\r\n         <TouchableOpacity\r\n           onPress={handleRegister}\r\n-          style={styles.button}\r\n+          style={[styles.button, (!termsAccepted || loadingRegister) && styles.buttonDisabled]}\r\n           activeOpacity={0.8}\r\n+          disabled={!termsAccepted || loadingRegister}\r\n         >\r\n           {\r\n             loadingRegister ? (\r\n-              <ActivityIndicator size=\"small\" color=\"#FFF\" />\r\n+              <ActivityIndicator size=\"small\" color={styles.textButton.color} />\r\n             ) : (\r\n               <Text style={styles.textButton}>Cadastrar</Text>\r\n             )\r\n           }\r\n@@ -131,11 +157,7 @@\n         <TouchableOpacity onPress={goToLogin} activeOpacity={0.7}>\r\n           <Text style={styles.textButtonLoginLink}>Faça login</Text>\r\n         </TouchableOpacity>\r\n       </View>\r\n-\r\n-      <TouchableOpacity style={styles.buttonTerms} activeOpacity={0.7}>\r\n-        <Text style={styles.textButtonTerms}>Termos de uso</Text>\r\n-      </TouchableOpacity>\r\n     </KeyboardAvoidingView>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1759370217899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n   ActivityIndicator,\r\n   Image,\r\n   KeyboardAvoidingView,\r\n   Platform,\r\n+  ScrollView,\r\n   Text,\r\n   TextInput,\r\n   TouchableOpacity,\r\n   View\r\n@@ -76,88 +77,94 @@\n \r\n   return (\r\n     <KeyboardAvoidingView\r\n       behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n-      style={styles.container}\r\n+      style={{ flex: 1, backgroundColor: styles.container.backgroundColor }}\r\n     >\r\n-      <CustomAlert\r\n-        visible={alertVisible}\r\n-        title={alertInfo.title}\r\n-        message={alertInfo.message}\r\n-        onClose={() => setAlertVisible(false)}\r\n-      />\r\n-      <Image\r\n-        source={require(\"../../../assets/iconName.png\")}\r\n-        style={styles.logo}\r\n-      />\r\n-      <Text style={styles.screenTitle}>Crie sua conta</Text>\r\n-\r\n-      <View style={styles.inputContainer}>\r\n-        <TextInput\r\n-          value={name}\r\n-          onChangeText={(text) => setName(text)}\r\n-          placeholder=\"Nome completo\"\r\n-          placeholderTextColor={\"#869ab0\"}\r\n-          style={styles.textInput}\r\n-          autoCapitalize=\"words\"\r\n-          autoCorrect={false}\r\n+      <ScrollView\r\n+        contentContainerStyle={styles.scrollContainer}\r\n+        keyboardShouldPersistTaps=\"handled\"\r\n+        showsVerticalScrollIndicator={false}\r\n+      >\r\n+        <CustomAlert\r\n+          visible={alertVisible}\r\n+          title={alertInfo.title}\r\n+          message={alertInfo.message}\r\n+          onClose={() => setAlertVisible(false)}\r\n         />\r\n-        <TextInput\r\n-          value={email}\r\n-          onChangeText={(text) => setEmail(text)}\r\n-          placeholder=\"Email\"\r\n-          placeholderTextColor={\"#869ab0\"}\r\n-          style={styles.textInput}\r\n-          keyboardType=\"email-address\"\r\n-          autoCapitalize=\"none\"\r\n-          autoCorrect={false}\r\n+        <Image\r\n+          source={require(\"../../../assets/iconName.png\")}\r\n+          style={styles.logo}\r\n         />\r\n-        <TextInput\r\n-          value={password}\r\n-          onChangeText={(text) => setPassword(text)}\r\n-          placeholder=\"Senha\"\r\n-          placeholderTextColor={\"#869ab0\"}\r\n-          style={styles.textInput}\r\n-          secureTextEntry={true}\r\n-          autoCapitalize=\"none\"\r\n-        />\r\n-        <Text style={styles.passwordHintText}>\r\n-          A senha deve ter no mínimo 8 caracteres, incluindo letras maiúsculas, minúsculas e números.\r\n-        </Text>\r\n+        <Text style={styles.screenTitle}>Crie sua conta</Text>\r\n \r\n-        <View style={styles.termsContainer}>\r\n-          <TouchableOpacity onPress={() => setTermsAccepted(!termsAccepted)} style={styles.checkbox}>\r\n-            {termsAccepted && <Ionicons name=\"checkmark\" size={20} color={styles.checkbox.checkedColor} />}\r\n-          </TouchableOpacity>\r\n-          <View style={styles.termsTextContainer}>\r\n-            <Text style={styles.termsText}>Eu li e concordo com os </Text>\r\n-            <TouchableOpacity onPress={goToTerms}>\r\n-              <Text style={styles.termsLink}>Termos de Uso</Text>\r\n+        <View style={styles.inputContainer}>\r\n+          <TextInput\r\n+            value={name}\r\n+            onChangeText={(text) => setName(text)}\r\n+            placeholder=\"Nome completo\"\r\n+            placeholderTextColor={\"#869ab0\"}\r\n+            style={styles.textInput}\r\n+            autoCapitalize=\"words\"\r\n+            autoCorrect={false}\r\n+          />\r\n+          <TextInput\r\n+            value={email}\r\n+            onChangeText={(text) => setEmail(text)}\r\n+            placeholder=\"Email\"\r\n+            placeholderTextColor={\"#869ab0\"}\r\n+            style={styles.textInput}\r\n+            keyboardType=\"email-address\"\r\n+            autoCapitalize=\"none\"\r\n+            autoCorrect={false}\r\n+          />\r\n+          <TextInput\r\n+            value={password}\r\n+            onChangeText={(text) => setPassword(text)}\r\n+            placeholder=\"Senha\"\r\n+            placeholderTextColor={\"#869ab0\"}\r\n+            style={styles.textInput}\r\n+            secureTextEntry={true}\r\n+            autoCapitalize=\"none\"\r\n+          />\r\n+          <Text style={styles.passwordHintText}>\r\n+            A senha deve ter no mínimo 8 caracteres, incluindo letras maiúsculas, minúsculas e números.\r\n+          </Text>\r\n+\r\n+          <View style={styles.termsContainer}>\r\n+            <TouchableOpacity onPress={() => setTermsAccepted(!termsAccepted)} style={styles.checkbox}>\r\n+              {termsAccepted && <Ionicons name=\"checkmark\" size={20} color={styles.checkbox.checkedColor} />}\r\n             </TouchableOpacity>\r\n+            <View style={styles.termsTextContainer}>\r\n+              <Text style={styles.termsText}>Eu li e concordo com os </Text>\r\n+              <TouchableOpacity onPress={goToTerms}>\r\n+                <Text style={styles.termsLink}>Termos de Uso</Text>\r\n+              </TouchableOpacity>\r\n+            </View>\r\n           </View>\r\n+\r\n+          <TouchableOpacity\r\n+            onPress={handleRegister}\r\n+            style={[styles.button, (!termsAccepted || loadingRegister) && styles.buttonDisabled]}\r\n+            activeOpacity={0.8}\r\n+            disabled={!termsAccepted || loadingRegister}\r\n+          >\r\n+            {\r\n+              loadingRegister ? (\r\n+                <ActivityIndicator size=\"small\" color={styles.textButton.color} />\r\n+              ) : (\r\n+                <Text style={styles.textButton}>Cadastrar</Text>\r\n+              )\r\n+            }\r\n+          </TouchableOpacity>\r\n         </View>\r\n \r\n-        <TouchableOpacity\r\n-          onPress={handleRegister}\r\n-          style={[styles.button, (!termsAccepted || loadingRegister) && styles.buttonDisabled]}\r\n-          activeOpacity={0.8}\r\n-          disabled={!termsAccepted || loadingRegister}\r\n-        >\r\n-          {\r\n-            loadingRegister ? (\r\n-              <ActivityIndicator size=\"small\" color={styles.textButton.color} />\r\n-            ) : (\r\n-              <Text style={styles.textButton}>Cadastrar</Text>\r\n-            )\r\n-          }\r\n-        </TouchableOpacity>\r\n-      </View>\r\n-\r\n-      <View style={styles.buttonContainer}>\r\n-        <Text style={styles.textButtonLogin}>Já tem uma conta?</Text>\r\n-        <TouchableOpacity onPress={goToLogin} activeOpacity={0.7}>\r\n-          <Text style={styles.textButtonLoginLink}>Faça login</Text>\r\n-        </TouchableOpacity>\r\n-      </View>\r\n+        <View style={styles.buttonContainer}>\r\n+          <Text style={styles.textButtonLogin}>Já tem uma conta?</Text>\r\n+          <TouchableOpacity onPress={goToLogin} activeOpacity={0.7}>\r\n+            <Text style={styles.textButtonLoginLink}>Faça login</Text>\r\n+          </TouchableOpacity>\r\n+        </View>\r\n+      </ScrollView>\r\n     </KeyboardAvoidingView>\r\n   );\r\n }\r\n"
                }
            ],
            "date": 1759367537833,
            "name": "Commit-0",
            "content": "import { useNavigation } from \"@react-navigation/native\";\r\nimport { useContext, useState } from \"react\";\r\nimport {\r\n  ActivityIndicator,\r\n  Image,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View\r\n} from \"react-native\";\r\n\r\nimport CustomAlert from \"../../components/customAlert/CustomAlert\";\r\nimport { AuthContext } from \"../../contexts/Auth\";\r\nimport styles from \"./styles\";\r\n\r\nexport default function Register() {\r\n  const { signUp, loading } = useContext(AuthContext);\r\n  const navigation = useNavigation();\r\n\r\n  const [loadingRegister, setLoadingRegister] = useState(loading);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  // Estado para o alerta customizado\r\n  const [alertVisible, setAlertVisible] = useState(false);\r\n  const [alertInfo, setAlertInfo] = useState({ title: \"\", message: \"\" });\r\n\r\n  const showAlert = (title, message) => {\r\n    setAlertInfo({ title, message });\r\n    setAlertVisible(true);\r\n  };\r\n\r\n  // Função para o cadastro\r\n  async function handleRegister() {\r\n    setLoadingRegister(true);\r\n    if (name === \"\" || email === \"\" || password === \"\") {\r\n      showAlert(\"Atenção\", \"Por favor, preencha todos os campos!\");\r\n      setLoadingRegister(false);\r\n      return;\r\n    }\r\n    try {\r\n      const result = await signUp(name, email, password);\r\n      if (!result.success) {\r\n        setAlertInfo({ title: \"Erro\", message: result.message });\r\n        setAlertVisible(true);\r\n      }\r\n    } catch (error) {\r\n      setAlertInfo({ title: \"Erro\", message: error.message });\r\n      setAlertVisible(true);\r\n    }\r\n    finally {\r\n      setLoadingRegister(false);\r\n    }\r\n  }\r\n  // Função para navegar de volta para a tela de login\r\n  function goToLogin() {\r\n    navigation.goBack(\"Login\");\r\n  }\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n      style={styles.container}\r\n    >\r\n      <CustomAlert\r\n        visible={alertVisible}\r\n        title={alertInfo.title}\r\n        message={alertInfo.message}\r\n        onClose={() => setAlertVisible(false)}\r\n      />\r\n      <Image\r\n        source={require(\"../../../assets/iconName.png\")}\r\n        style={styles.logo}\r\n      />\r\n      <Text style={styles.screenTitle}>Crie sua conta</Text>\r\n\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          value={name}\r\n          onChangeText={(text) => setName(text)}\r\n          placeholder=\"Nome completo\"\r\n          \r\n          style={styles.textInput}\r\n          autoCapitalize=\"words\"\r\n          autoCorrect={false}\r\n        />\r\n        <TextInput\r\n          value={email}\r\n          onChangeText={(text) => setEmail(text)}\r\n          placeholder=\"Email\"\r\n          style={styles.textInput}\r\n          keyboardType=\"email-address\"\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n        />\r\n        <TextInput\r\n          value={password}\r\n          onChangeText={(text) => setPassword(text)}\r\n          placeholder=\"Senha\"\r\n          style={styles.textInput}\r\n          secureTextEntry={true}\r\n          autoCapitalize=\"none\"\r\n        />\r\n        <Text style={styles.passwordHintText}>\r\n          A senha deve ter no mínimo 8 caracteres, incluindo letras maiúsculas, minúsculas e números.\r\n        </Text>\r\n\r\n        <TouchableOpacity\r\n          onPress={handleRegister}\r\n          style={styles.button}\r\n          activeOpacity={0.8}\r\n        >\r\n          {\r\n            loadingRegister ? (\r\n              <ActivityIndicator size=\"small\" color=\"#FFF\" />\r\n            ) : (\r\n              <Text style={styles.textButton}>Cadastrar</Text>\r\n            )\r\n          }\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={styles.buttonContainer}>\r\n        <Text style={styles.textButtonLogin}>Já tem uma conta?</Text>\r\n        <TouchableOpacity onPress={goToLogin} activeOpacity={0.7}>\r\n          <Text style={styles.textButtonLoginLink}>Faça login</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <TouchableOpacity style={styles.buttonTerms} activeOpacity={0.7}>\r\n        <Text style={styles.textButtonTerms}>Termos de uso</Text>\r\n      </TouchableOpacity>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n"
        }
    ]
}