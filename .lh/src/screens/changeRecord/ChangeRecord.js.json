{
    "sourceFile": "src/screens/changeRecord/ChangeRecord.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1759367608284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1759367608283,
            "name": "Commit-0",
            "content": "import React,{useState} from 'react';\r\nimport { View, Text, TextInput, Image, TouchableOpacity, KeyboardAvoidingView, Platform, ActivityIndicator } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { redefinirSenha} from '../../services/firebase/userService'\r\nimport CustomAlert from '../../components/customAlert/CustomAlert';\r\n\r\nimport styles from './styles';\r\n\r\nexport default function ChangeRecord(){\r\n    const navigation = useNavigation();\r\n    const [email, setEmail] = React.useState('');\r\n\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [alertInfo, setAlertInfo] = useState({ title: \"\", message: \"\" });\r\n\r\n    const [loadingVisible, setLoadingVisible] = useState(false);\r\n\r\n    function goToLogin(){\r\n        navigation.replace('Login');\r\n    }\r\n\r\n    async function redefinir () {\r\n        setLoadingVisible(true);\r\n        if (!email) {\r\n            setAlertInfo({ title: 'Atenção', message: 'Por favor, digite seu e-mail.' });\r\n            setAlertVisible(true);\r\n            setLoadingVisible(false);\r\n            return;\r\n        }\r\n        try {\r\n            await redefinirSenha(email);\r\n            setEmail('');\r\n            setAlertInfo({ title: 'Sucesso', message: 'E-mail de redefinição de senha enviado! Verifique sua caixa de entrada.' });\r\n            setAlertVisible(true);   \r\n        } catch (error) {\r\n            setAlertInfo({ title: 'Erro', message: error.message });\r\n            setAlertVisible(true);\r\n        }finally{\r\n            setLoadingVisible(false);\r\n            setEmail('');\r\n        }\r\n    \r\n    }\r\n\r\n    return(\r\n        <KeyboardAvoidingView \r\n            behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n            style={styles.container}\r\n        >\r\n            <Image \r\n                source={require('../../../assets/iconName.png')} \r\n                style={styles.logo}\r\n            />\r\n            <Text style={styles.screenTitle}>Recuperar Senha</Text>\r\n            <Text style={styles.title}>\r\n                Não se preocupe! Vamos ajudar você a recuperar seu acesso.\r\n            </Text>\r\n            <View style={styles.inputContainer}>\r\n                <TextInput \r\n                    value={email}\r\n                    onChangeText={(text) => setEmail(text)}\r\n                    placeholder='Email'\r\n                    placeholderTextColor={\"#869ab0\"}\r\n                    style={styles.textInput}\r\n                    keyboardType=\"email-address\"\r\n                    autoCapitalize=\"none\"\r\n                    autoCorrect={false}\r\n                />\r\n                <TouchableOpacity\r\n                    onPress={redefinir}\r\n                    style={styles.button}\r\n                    activeOpacity={0.8}\r\n                >\r\n                    {loadingVisible ? (\r\n                        <ActivityIndicator size=\"small\" color=\"#fff\" />\r\n                    ) : (\r\n                        <Text style={styles.textButton}>Redefinir Senha</Text>\r\n                    )}\r\n \r\n                </TouchableOpacity>\r\n            </View>\r\n              <CustomAlert\r\n                    visible={alertVisible}\r\n                    title={alertInfo.title}\r\n                    message={alertInfo.message}\r\n                    onClose={() => setAlertVisible(false)}\r\n                />\r\n           \r\n            <View style={styles.buttonContainer}>\r\n                <Text style={styles.textButtonLogin}>Já tem uma conta?</Text>\r\n                <TouchableOpacity onPress={goToLogin} activeOpacity={0.7}>\r\n                    <Text style={styles.textButtonLoginLink}>Faça login</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n            <TouchableOpacity style={styles.buttonTerms} activeOpacity={0.7}>\r\n                <Text style={styles.textButtonTerms}>Termos de uso</Text>\r\n            </TouchableOpacity>\r\n        </KeyboardAvoidingView>\r\n    );\r\n}\r\n"
        }
    ]
}