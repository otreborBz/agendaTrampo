{
    "sourceFile": "src/components/appDrawer/AppDrawer.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1758642211677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1758642218032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import { AuthContext } from '../../contexts/auth';\r\n import Agendamentos from '../../screen/agendamentos/agendamentos';\r\n import Home from '../../screen/home/home';\r\n import Sobre from \"../../screen/sobre/sobre\";\r\n-import { colors } from '../../themes/colors/colors';\r\n+import { colors } from '../../themes/colors/Colors';\r\n import stylesDrawer from './style';\r\n \r\n const Drawer = createDrawerNavigator();\r\n \r\n"
                },
                {
                    "date": 1758645038323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,95 @@\n+\r\n+import Feather from '@expo/vector-icons/Feather';\r\n+import Ionicons from '@expo/vector-icons/Ionicons';\r\n+import { createDrawerNavigator, DrawerContentScrollView, DrawerItemList } from '@react-navigation/drawer';\r\n+import { useContext } from 'react';\r\n+import { Image, Text, TouchableOpacity, View } from 'react-native';\r\n+import { AuthContext } from '../../contexts/auth';\r\n+import Agendamentos from '../../screen/agendamentos/agendamentos';\r\n+import Home from '../../screen/home/home';\r\n+import Sobre from \"../../screen/sobre/sobre\";\r\n+import { colors } from '../../themes/colors/Colors';\r\n+import stylesDrawer from './style';\r\n+\r\n+const Drawer = createDrawerNavigator();\r\n+\r\n+function CustomDrawerContent(props) {\r\n+\r\n+  const { user, logout } = useContext(AuthContext);\r\n+\r\n+  function getFirstName(string) {\r\n+    if (!string) return \"\";\r\n+    const firstName = string.split(\" \")[0];\r\n+    return firstName.charAt(0).toUpperCase() + firstName.slice(1);\r\n+  }\r\n+\r\n+  return (\r\n+    <View style={{ flex: 1, backgroundColor: colors.white }}>\r\n+      <DrawerContentScrollView {...props} style={{ backgroundColor: colors.white }} contentContainerStyle={{ paddingTop: 0 }}>\r\n+        <View style={stylesDrawer.header}>\r\n+          <Image source={require('./')} style={stylesDrawer.logo} />\r\n+          <Text style={stylesDrawer.greetingText}>\r\n+            游녦 Ol치, <Text style={stylesDrawer.greetingName}>{user?.name ? getFirstName(user.name) : 'Usu치rio'}</Text>!\r\n+          </Text>\r\n+        </View>\r\n+        <View style={{ flex: 1, backgroundColor: colors.white }}>\r\n+          <DrawerItemList {...props} labelStyle={{ color: colors.secondary, fontWeight: 'bold', fontSize: 16 }} activeTintColor={colors.primary} inactiveTintColor={colors.secondary} />\r\n+        </View>\r\n+\r\n+      </DrawerContentScrollView>\r\n+      <View style={stylesDrawer.logoutContainer}>\r\n+        <TouchableOpacity onPress={logout} style={stylesDrawer.logoutBtn}>\r\n+          <Feather name=\"log-out\" size={22} color={colors.secondary} />\r\n+          <Text style={stylesDrawer.logoutText}>Sair</Text>\r\n+        </TouchableOpacity>\r\n+      </View>\r\n+    </View>\r\n+  );\r\n+}\r\n+\r\n+\r\n+export default function AppDrawer() {\r\n+  return (\r\n+    <Drawer.Navigator\r\n+      initialRouteName=\"Home\"\r\n+      drawerContent={props => <CustomDrawerContent {...props} />}\r\n+      screenOptions={{\r\n+        drawerActiveTintColor: colors.secondary,\r\n+        drawerInactiveTintColor: colors.darkGray,\r\n+        drawerLabelStyle: { fontWeight: 'bold', fontSize: 16 },\r\n+        drawerStyle: { backgroundColor: colors.white },\r\n+      }}\r\n+    >\r\n+      <Drawer.Screen\r\n+        name=\"Home\"\r\n+        component={Home}\r\n+        options={{\r\n+          title: 'In칤cio',\r\n+          drawerIcon: ({ color, size }) => (\r\n+            <Ionicons name=\"home-outline\" size={size} color={color} />\r\n+          ),\r\n+        }}\r\n+      />\r\n+      <Drawer.Screen\r\n+        name=\"Agendar\"\r\n+        component={Agendamentos}\r\n+        options={{\r\n+          headerShown: false,\r\n+          drawerIcon: ({ color, size }) => (\r\n+            <Ionicons name=\"calendar\" size={size} color={color} />\r\n+          ),\r\n+        }}\r\n+      />\r\n+      <Drawer.Screen\r\n+        name=\"Sobre\"\r\n+        component={Sobre}\r\n+        options={{\r\n+          headerShown: false,\r\n+          drawerIcon: ({ color, size }) => (\r\n+            <Ionicons name=\"information-circle-outline\" size={size} color={color} />\r\n+          ),\r\n+        }}\r\n+      />\r\n+    </Drawer.Navigator>\r\n+  );\r\n+}\r\n"
                }
            ],
            "date": 1758642211677,
            "name": "Commit-0",
            "content": "\r\nimport { View, Text, Image, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from '../../contexts/auth';\r\nimport { colors } from '../../themes/colors/colors';\r\nimport Feather from '@expo/vector-icons/Feather';\r\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList } from '@react-navigation/drawer';\r\nimport Ionicons from '@expo/vector-icons/Ionicons';\r\nimport Home from '../../screen/home/home';\r\nimport Sobre from \"../../screen/sobre/sobre\";\r\nimport Agendamentos from '../../screen/agendamentos/agendamentos';\r\nimport stylesDrawer from './style';\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\nfunction CustomDrawerContent(props) {\r\n  \r\n  const { user, logout } = useContext(AuthContext);\r\n\r\n  function getFirstName(string) {\r\n    if (!string) return \"\";\r\n    const firstName = string.split(\" \")[0];\r\n    return firstName.charAt(0).toUpperCase() + firstName.slice(1);\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1, backgroundColor: colors.white }}>\r\n      <DrawerContentScrollView {...props} style={{ backgroundColor: colors.white }} contentContainerStyle={{ paddingTop: 0 }}>\r\n        <View style={stylesDrawer.header}>\r\n          <Image source={require('../../image/logo/icon.png')} style={stylesDrawer.logo} />\r\n          <Text style={stylesDrawer.greetingText}>\r\n            游녦 Ol치, <Text style={stylesDrawer.greetingName}>{user?.name ? getFirstName(user.name) : 'Usu치rio'}</Text>!\r\n          </Text>\r\n        </View>\r\n        <View style={{ flex: 1, backgroundColor: colors.white }}>\r\n          <DrawerItemList {...props} labelStyle={{ color: colors.secondary, fontWeight: 'bold', fontSize: 16 }} activeTintColor={colors.primary} inactiveTintColor={colors.secondary} />\r\n        </View>\r\n        \r\n      </DrawerContentScrollView>\r\n      <View style={stylesDrawer.logoutContainer}>\r\n        <TouchableOpacity onPress={logout} style={stylesDrawer.logoutBtn}>\r\n          <Feather name=\"log-out\" size={22} color={colors.secondary} />\r\n          <Text style={stylesDrawer.logoutText}>Sair</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\nexport default function AppDrawer() {\r\n  return (\r\n    <Drawer.Navigator\r\n      initialRouteName=\"Home\"\r\n      drawerContent={props => <CustomDrawerContent {...props} />}\r\n      screenOptions={{\r\n        drawerActiveTintColor: colors.secondary,\r\n        drawerInactiveTintColor: colors.darkGray,\r\n        drawerLabelStyle: { fontWeight: 'bold', fontSize: 16 },\r\n        drawerStyle: { backgroundColor: colors.white },\r\n      }}\r\n    >\r\n      <Drawer.Screen\r\n        name=\"Home\"\r\n        component={Home}\r\n        options={{\r\n          title: 'In칤cio',\r\n          drawerIcon: ({ color, size }) => (\r\n            <Ionicons name=\"home-outline\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Agendar\"\r\n        component={Agendamentos}\r\n        options={{\r\n          headerShown: false,\r\n          drawerIcon: ({ color, size }) => (\r\n            <Ionicons name=\"calendar\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Sobre\"\r\n        component={Sobre}\r\n        options={{\r\n          headerShown: false,\r\n          drawerIcon: ({ color, size }) => (\r\n            <Ionicons name=\"information-circle-outline\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n    </Drawer.Navigator>\r\n  );\r\n}\r\n"
        }
    ]
}