{
    "sourceFile": "src/components/adIntertitial/AdIntertitial.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1759097146727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1759097171858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n   InterstitialAd,\n   AdEventType,\n   TestIds,\n } from \"react-native-google-mobile-ads\";\n-import { adUnitIdInterstitial } from \"../../services/adMobService/AdMobService\";\n+import { adUnitIdInterstitial } from \";\n \n // Se quiser testar, use TestIds.INTERSTITIAL\n const interstitial = InterstitialAd.createForAdRequest(\n   adUnitIdInterstitial || TestIds.INTERSTITIAL,\n"
                },
                {
                    "date": 1759097178796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import { useEffect, useState } from \"react\";\n+import { View, Button, Alert } from \"react-native\";\n+import {\n+  InterstitialAd,\n+  AdEventType,\n+  TestIds,\n+} from \"react-native-google-mobile-ads\";\n+import { adUnitIdInterstitial } from \"\"\n+\n+// Se quiser testar, use TestIds.INTERSTITIAL\n+const interstitial = InterstitialAd.createForAdRequest(\n+  adUnitIdInterstitial || TestIds.INTERSTITIAL,\n+  {\n+    requestNonPersonalizedAdsOnly: true,\n+  }\n+);\n+\n+export default function AdInterstitial() {\n+  const [loaded, setLoaded] = useState(false);\n+\n+  useEffect(() => {\n+    const unsubscribeLoaded = interstitial.addAdEventListener(\n+      AdEventType.LOADED,\n+      () => {\n+        setLoaded(true);\n+      }\n+    );\n+\n+    const unsubscribeClosed = interstitial.addAdEventListener(\n+      AdEventType.CLOSED,\n+      () => {\n+        setLoaded(false);\n+        interstitial.load(); // recarrega automaticamente depois que fecha\n+      }\n+    );\n+\n+    // Carrega o primeiro anúncio\n+    interstitial.load();\n+\n+    return () => {\n+      unsubscribeLoaded();\n+      unsubscribeClosed();\n+    };\n+  }, []);\n+\n+  const showAd = () => {\n+    if (loaded) {\n+      interstitial.show();\n+    } else {\n+      Alert.alert(\"Anúncio ainda não carregado!\");\n+    }\n+  };\n+\n+  return (\n+    <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n+      <Button title=\"Mostrar Interstitial\" onPress={showAd} />\n+    </View>\n+  );\n+}\n"
                },
                {
                    "date": 1759097185530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import { useEffect, useState } from \"react\";\n+import { View, Button, Alert } from \"react-native\";\n+import {\n+  InterstitialAd,\n+  AdEventType,\n+  TestIds,\n+} from \"react-native-google-mobile-ads\";\n+import { adUnitIdInterstitial } from \"./\";\n+\n+// Se quiser testar, use TestIds.INTERSTITIAL\n+const interstitial = InterstitialAd.createForAdRequest(\n+  adUnitIdInterstitial || TestIds.INTERSTITIAL,\n+  {\n+    requestNonPersonalizedAdsOnly: true,\n+  }\n+);\n+\n+export default function AdInterstitial() {\n+  const [loaded, setLoaded] = useState(false);\n+\n+  useEffect(() => {\n+    const unsubscribeLoaded = interstitial.addAdEventListener(\n+      AdEventType.LOADED,\n+      () => {\n+        setLoaded(true);\n+      }\n+    );\n+\n+    const unsubscribeClosed = interstitial.addAdEventListener(\n+      AdEventType.CLOSED,\n+      () => {\n+        setLoaded(false);\n+        interstitial.load(); // recarrega automaticamente depois que fecha\n+      }\n+    );\n+\n+    // Carrega o primeiro anúncio\n+    interstitial.load();\n+\n+    return () => {\n+      unsubscribeLoaded();\n+      unsubscribeClosed();\n+    };\n+  }, []);\n+\n+  const showAd = () => {\n+    if (loaded) {\n+      interstitial.show();\n+    } else {\n+      Alert.alert(\"Anúncio ainda não carregado!\");\n+    }\n+  };\n+\n+  return (\n+    <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n+      <Button title=\"Mostrar Interstitial\" onPress={showAd} />\n+    </View>\n+  );\n+}\n"
                },
                {
                    "date": 1759097196707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import { useEffect, useState } from \"react\";\n+import { View, Button, Alert } from \"react-native\";\n+import {\n+  InterstitialAd,\n+  AdEventType,\n+  TestIds,\n+} from \"react-native-google-mobile-ads\";\n+import { adUnitIdInterstitial } from \"../\";\n+\n+// Se quiser testar, use TestIds.INTERSTITIAL\n+const interstitial = InterstitialAd.createForAdRequest(\n+  adUnitIdInterstitial || TestIds.INTERSTITIAL,\n+  {\n+    requestNonPersonalizedAdsOnly: true,\n+  }\n+);\n+\n+export default function AdInterstitial() {\n+  const [loaded, setLoaded] = useState(false);\n+\n+  useEffect(() => {\n+    const unsubscribeLoaded = interstitial.addAdEventListener(\n+      AdEventType.LOADED,\n+      () => {\n+        setLoaded(true);\n+      }\n+    );\n+\n+    const unsubscribeClosed = interstitial.addAdEventListener(\n+      AdEventType.CLOSED,\n+      () => {\n+        setLoaded(false);\n+        interstitial.load(); // recarrega automaticamente depois que fecha\n+      }\n+    );\n+\n+    // Carrega o primeiro anúncio\n+    interstitial.load();\n+\n+    return () => {\n+      unsubscribeLoaded();\n+      unsubscribeClosed();\n+    };\n+  }, []);\n+\n+  const showAd = () => {\n+    if (loaded) {\n+      interstitial.show();\n+    } else {\n+      Alert.alert(\"Anúncio ainda não carregado!\");\n+    }\n+  };\n+\n+  return (\n+    <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n+      <Button title=\"Mostrar Interstitial\" onPress={showAd} />\n+    </View>\n+  );\n+}\n"
                },
                {
                    "date": 1759097203553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import { useEffect, useState } from \"react\";\n+import { View, Button, Alert } from \"react-native\";\n+import {\n+  InterstitialAd,\n+  AdEventType,\n+  TestIds,\n+} from \"react-native-google-mobile-ads\";\n+import { adUnitIdInterstitial } from \"../../services\";\n+\n+// Se quiser testar, use TestIds.INTERSTITIAL\n+const interstitial = InterstitialAd.createForAdRequest(\n+  adUnitIdInterstitial || TestIds.INTERSTITIAL,\n+  {\n+    requestNonPersonalizedAdsOnly: true,\n+  }\n+);\n+\n+export default function AdInterstitial() {\n+  const [loaded, setLoaded] = useState(false);\n+\n+  useEffect(() => {\n+    const unsubscribeLoaded = interstitial.addAdEventListener(\n+      AdEventType.LOADED,\n+      () => {\n+        setLoaded(true);\n+      }\n+    );\n+\n+    const unsubscribeClosed = interstitial.addAdEventListener(\n+      AdEventType.CLOSED,\n+      () => {\n+        setLoaded(false);\n+        interstitial.load(); // recarrega automaticamente depois que fecha\n+      }\n+    );\n+\n+    // Carrega o primeiro anúncio\n+    interstitial.load();\n+\n+    return () => {\n+      unsubscribeLoaded();\n+      unsubscribeClosed();\n+    };\n+  }, []);\n+\n+  const showAd = () => {\n+    if (loaded) {\n+      interstitial.show();\n+    } else {\n+      Alert.alert(\"Anúncio ainda não carregado!\");\n+    }\n+  };\n+\n+  return (\n+    <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n+      <Button title=\"Mostrar Interstitial\" onPress={showAd} />\n+    </View>\n+  );\n+}\n"
                },
                {
                    "date": 1759097212480,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import { useEffect, useState } from \"react\";\n+import { View, Button, Alert } from \"react-native\";\n+import {\n+  InterstitialAd,\n+  AdEventType,\n+  TestIds,\n+} from \"react-native-google-mobile-ads\";\n+import { adUnitIdInterstitial } from \"../../services/adMobService\";\n+\n+// Se quiser testar, use TestIds.INTERSTITIAL\n+const interstitial = InterstitialAd.createForAdRequest(\n+  adUnitIdInterstitial || TestIds.INTERSTITIAL,\n+  {\n+    requestNonPersonalizedAdsOnly: true,\n+  }\n+);\n+\n+export default function AdInterstitial() {\n+  const [loaded, setLoaded] = useState(false);\n+\n+  useEffect(() => {\n+    const unsubscribeLoaded = interstitial.addAdEventListener(\n+      AdEventType.LOADED,\n+      () => {\n+        setLoaded(true);\n+      }\n+    );\n+\n+    const unsubscribeClosed = interstitial.addAdEventListener(\n+      AdEventType.CLOSED,\n+      () => {\n+        setLoaded(false);\n+        interstitial.load(); // recarrega automaticamente depois que fecha\n+      }\n+    );\n+\n+    // Carrega o primeiro anúncio\n+    interstitial.load();\n+\n+    return () => {\n+      unsubscribeLoaded();\n+      unsubscribeClosed();\n+    };\n+  }, []);\n+\n+  const showAd = () => {\n+    if (loaded) {\n+      interstitial.show();\n+    } else {\n+      Alert.alert(\"Anúncio ainda não carregado!\");\n+    }\n+  };\n+\n+  return (\n+    <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n+      <Button title=\"Mostrar Interstitial\" onPress={showAd} />\n+    </View>\n+  );\n+}\n"
                },
                {
                    "date": 1759097223021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import { useEffect, useState } from \"react\";\n+import { View, Button, Alert } from \"react-native\";\n+import {\n+  InterstitialAd,\n+  AdEventType,\n+  TestIds,\n+} from \"react-native-google-mobile-ads\";\n+import { adUnitIdInterstitial } from \"../../services/adMobService/AdMobService\";\n+\n+// Se quiser testar, use TestIds.INTERSTITIAL\n+const interstitial = InterstitialAd.createForAdRequest(\n+  adUnitIdInterstitial || TestIds.INTERSTITIAL,\n+  {\n+    requestNonPersonalizedAdsOnly: true,\n+  }\n+);\n+\n+export default function AdInterstitial() {\n+  const [loaded, setLoaded] = useState(false);\n+\n+  useEffect(() => {\n+    const unsubscribeLoaded = interstitial.addAdEventListener(\n+      AdEventType.LOADED,\n+      () => {\n+        setLoaded(true);\n+      }\n+    );\n+\n+    const unsubscribeClosed = interstitial.addAdEventListener(\n+      AdEventType.CLOSED,\n+      () => {\n+        setLoaded(false);\n+        interstitial.load(); // recarrega automaticamente depois que fecha\n+      }\n+    );\n+\n+    // Carrega o primeiro anúncio\n+    interstitial.load();\n+\n+    return () => {\n+      unsubscribeLoaded();\n+      unsubscribeClosed();\n+    };\n+  }, []);\n+\n+  const showAd = () => {\n+    if (loaded) {\n+      interstitial.show();\n+    } else {\n+      Alert.alert(\"Anúncio ainda não carregado!\");\n+    }\n+  };\n+\n+  return (\n+    <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n+      <Button title=\"Mostrar Interstitial\" onPress={showAd} />\n+    </View>\n+  );\n+}\n"
                },
                {
                    "date": 1759102365601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,12 @@\n import { useEffect, useState } from \"react\";\n import { View, Button, Alert } from \"react-native\";\n-import {\n-  InterstitialAd,\n-  AdEventType,\n-  TestIds,\n-} from \"react-native-google-mobile-ads\";\n+import { InterstitialAd, AdEventType, TestIds } from \"react-native-google-mobile-ads\";\n import { adUnitIdInterstitial } from \"../../services/adMobService/AdMobService\";\n \n-// Se quiser testar, use TestIds.INTERSTITIAL\n+// Cria o Interstitial Ad\n const interstitial = InterstitialAd.createForAdRequest(\n-  adUnitIdInterstitial || TestIds.INTERSTITIAL,\n+  __DEV__ ? TestIds.INTERSTITIAL : adUnitIdInterstitial,\n   {\n     requestNonPersonalizedAdsOnly: true,\n   }\n );\n@@ -18,96 +14,43 @@\n export default function AdInterstitial() {\n   const [loaded, setLoaded] = useState(false);\n \n   useEffect(() => {\n-    const unsubscribeLoaded = interstitial.addAdEventListener(\n-      AdEventType.LOADED,\n-      () => {\n-        setLoaded(true);\n-      }\n-    );\n+    // Evento quando o anúncio carrega\n+    const unsubscribeLoaded = interstitial.addAdEventListener(AdEventType.LOADED, () => {\n+      setLoaded(true);\n+      console.log(\"[InterstitialAd] Anúncio carregado!\");\n+    });\n \n-    const unsubscribeClosed = interstitial.addAdEventListener(\n-      AdEventType.CLOSED,\n-      () => {\n-        setLoaded(false);\n-        interstitial.load(); // recarrega automaticamente depois que fecha\n-      }\n-    );\n+    // Evento quando o anúncio é fechado\n+    const unsubscribeClosed = interstitial.addAdEventListener(AdEventType.CLOSED, () => {\n+      setLoaded(false);\n+      console.log(\"[InterstitialAd] Anúncio fechado, recarregando...\");\n+      interstitial.load(); // recarrega automaticamente\n+    });\n \n-    // Carrega o primeiro anúncio\n-    interstitial.load();\n+    // Evento de erro\n+    const unsubscribeError = interstitial.addAdEventListener(AdEventType.ERROR, (err) => {\n+      console.error(\"[InterstitialAd ERROR]:\", err);\n+    });\n \n-    return () => {\n-      unsubscribeLoaded();\n-      unsubscribeClosed();\n-    };\n-  }, []);\n-\n-  const showAd = () => {\n-    if (loaded) {\n-      interstitial.show();\n-    } else {\n-      Alert.alert(\"Anúncio ainda não carregado!\");\n-    }\n-  };\n-\n-  return (\n-    <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n-      <Button title=\"Mostrar Interstitial\" onPress={showAd} />\n-    </View>\n-  );\n-}\n-import { useEffect, useState } from \"react\";\n-import { View, Button, Alert } from \"react-native\";\n-import {\n-  InterstitialAd,\n-  AdEventType,\n-  TestIds,\n-} from \"react-native-google-mobile-ads\";\n-import { adUnitIdInterstitial } from \"../../services/adMobService\";\n-\n-// Se quiser testar, use TestIds.INTERSTITIAL\n-const interstitial = InterstitialAd.createForAdRequest(\n-  adUnitIdInterstitial || TestIds.INTERSTITIAL,\n-  {\n-    requestNonPersonalizedAdsOnly: true,\n-  }\n-);\n-\n-export default function AdInterstitial() {\n-  const [loaded, setLoaded] = useState(false);\n-\n-  useEffect(() => {\n-    const unsubscribeLoaded = interstitial.addAdEventListener(\n-      AdEventType.LOADED,\n-      () => {\n-        setLoaded(true);\n-      }\n-    );\n-\n-    const unsubscribeClosed = interstitial.addAdEventListener(\n-      AdEventType.CLOSED,\n-      () => {\n-        setLoaded(false);\n-        interstitial.load(); // recarrega automaticamente depois que fecha\n-      }\n-    );\n-\n     // Carrega o primeiro anúncio\n     interstitial.load();\n \n+    // Cleanup\n     return () => {\n       unsubscribeLoaded();\n       unsubscribeClosed();\n+      unsubscribeError();\n     };\n   }, []);\n \n+  // Mostrar anúncio\n   const showAd = () => {\n     if (loaded) {\n       interstitial.show();\n     } else {\n-      Alert.alert(\"Anúncio ainda não carregado!\");\n+      Alert.alert(\"Atenção\", \"O anúncio ainda não está carregado. Por favor, tente novamente em alguns segundos.\");\n     }\n   };\n \n   return (\n@@ -115,299 +58,4 @@\n       <Button title=\"Mostrar Interstitial\" onPress={showAd} />\n     </View>\n   );\n }\n-import { useEffect, useState } from \"react\";\n-import { View, Button, Alert } from \"react-native\";\n-import {\n-  InterstitialAd,\n-  AdEventType,\n-  TestIds,\n-} from \"react-native-google-mobile-ads\";\n-import { adUnitIdInterstitial } from \"../../services\";\n-\n-// Se quiser testar, use TestIds.INTERSTITIAL\n-const interstitial = InterstitialAd.createForAdRequest(\n-  adUnitIdInterstitial || TestIds.INTERSTITIAL,\n-  {\n-    requestNonPersonalizedAdsOnly: true,\n-  }\n-);\n-\n-export default function AdInterstitial() {\n-  const [loaded, setLoaded] = useState(false);\n-\n-  useEffect(() => {\n-    const unsubscribeLoaded = interstitial.addAdEventListener(\n-      AdEventType.LOADED,\n-      () => {\n-        setLoaded(true);\n-      }\n-    );\n-\n-    const unsubscribeClosed = interstitial.addAdEventListener(\n-      AdEventType.CLOSED,\n-      () => {\n-        setLoaded(false);\n-        interstitial.load(); // recarrega automaticamente depois que fecha\n-      }\n-    );\n-\n-    // Carrega o primeiro anúncio\n-    interstitial.load();\n-\n-    return () => {\n-      unsubscribeLoaded();\n-      unsubscribeClosed();\n-    };\n-  }, []);\n-\n-  const showAd = () => {\n-    if (loaded) {\n-      interstitial.show();\n-    } else {\n-      Alert.alert(\"Anúncio ainda não carregado!\");\n-    }\n-  };\n-\n-  return (\n-    <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n-      <Button title=\"Mostrar Interstitial\" onPress={showAd} />\n-    </View>\n-  );\n-}\n-import { useEffect, useState } from \"react\";\n-import { View, Button, Alert } from \"react-native\";\n-import {\n-  InterstitialAd,\n-  AdEventType,\n-  TestIds,\n-} from \"react-native-google-mobile-ads\";\n-import { adUnitIdInterstitial } from \"../\";\n-\n-// Se quiser testar, use TestIds.INTERSTITIAL\n-const interstitial = InterstitialAd.createForAdRequest(\n-  adUnitIdInterstitial || TestIds.INTERSTITIAL,\n-  {\n-    requestNonPersonalizedAdsOnly: true,\n-  }\n-);\n-\n-export default function AdInterstitial() {\n-  const [loaded, setLoaded] = useState(false);\n-\n-  useEffect(() => {\n-    const unsubscribeLoaded = interstitial.addAdEventListener(\n-      AdEventType.LOADED,\n-      () => {\n-        setLoaded(true);\n-      }\n-    );\n-\n-    const unsubscribeClosed = interstitial.addAdEventListener(\n-      AdEventType.CLOSED,\n-      () => {\n-        setLoaded(false);\n-        interstitial.load(); // recarrega automaticamente depois que fecha\n-      }\n-    );\n-\n-    // Carrega o primeiro anúncio\n-    interstitial.load();\n-\n-    return () => {\n-      unsubscribeLoaded();\n-      unsubscribeClosed();\n-    };\n-  }, []);\n-\n-  const showAd = () => {\n-    if (loaded) {\n-      interstitial.show();\n-    } else {\n-      Alert.alert(\"Anúncio ainda não carregado!\");\n-    }\n-  };\n-\n-  return (\n-    <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n-      <Button title=\"Mostrar Interstitial\" onPress={showAd} />\n-    </View>\n-  );\n-}\n-import { useEffect, useState } from \"react\";\n-import { View, Button, Alert } from \"react-native\";\n-import {\n-  InterstitialAd,\n-  AdEventType,\n-  TestIds,\n-} from \"react-native-google-mobile-ads\";\n-import { adUnitIdInterstitial } from \"./\";\n-\n-// Se quiser testar, use TestIds.INTERSTITIAL\n-const interstitial = InterstitialAd.createForAdRequest(\n-  adUnitIdInterstitial || TestIds.INTERSTITIAL,\n-  {\n-    requestNonPersonalizedAdsOnly: true,\n-  }\n-);\n-\n-export default function AdInterstitial() {\n-  const [loaded, setLoaded] = useState(false);\n-\n-  useEffect(() => {\n-    const unsubscribeLoaded = interstitial.addAdEventListener(\n-      AdEventType.LOADED,\n-      () => {\n-        setLoaded(true);\n-      }\n-    );\n-\n-    const unsubscribeClosed = interstitial.addAdEventListener(\n-      AdEventType.CLOSED,\n-      () => {\n-        setLoaded(false);\n-        interstitial.load(); // recarrega automaticamente depois que fecha\n-      }\n-    );\n-\n-    // Carrega o primeiro anúncio\n-    interstitial.load();\n-\n-    return () => {\n-      unsubscribeLoaded();\n-      unsubscribeClosed();\n-    };\n-  }, []);\n-\n-  const showAd = () => {\n-    if (loaded) {\n-      interstitial.show();\n-    } else {\n-      Alert.alert(\"Anúncio ainda não carregado!\");\n-    }\n-  };\n-\n-  return (\n-    <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n-      <Button title=\"Mostrar Interstitial\" onPress={showAd} />\n-    </View>\n-  );\n-}\n-import { useEffect, useState } from \"react\";\n-import { View, Button, Alert } from \"react-native\";\n-import {\n-  InterstitialAd,\n-  AdEventType,\n-  TestIds,\n-} from \"react-native-google-mobile-ads\";\n-import { adUnitIdInterstitial } from \"\"\n-\n-// Se quiser testar, use TestIds.INTERSTITIAL\n-const interstitial = InterstitialAd.createForAdRequest(\n-  adUnitIdInterstitial || TestIds.INTERSTITIAL,\n-  {\n-    requestNonPersonalizedAdsOnly: true,\n-  }\n-);\n-\n-export default function AdInterstitial() {\n-  const [loaded, setLoaded] = useState(false);\n-\n-  useEffect(() => {\n-    const unsubscribeLoaded = interstitial.addAdEventListener(\n-      AdEventType.LOADED,\n-      () => {\n-        setLoaded(true);\n-      }\n-    );\n-\n-    const unsubscribeClosed = interstitial.addAdEventListener(\n-      AdEventType.CLOSED,\n-      () => {\n-        setLoaded(false);\n-        interstitial.load(); // recarrega automaticamente depois que fecha\n-      }\n-    );\n-\n-    // Carrega o primeiro anúncio\n-    interstitial.load();\n-\n-    return () => {\n-      unsubscribeLoaded();\n-      unsubscribeClosed();\n-    };\n-  }, []);\n-\n-  const showAd = () => {\n-    if (loaded) {\n-      interstitial.show();\n-    } else {\n-      Alert.alert(\"Anúncio ainda não carregado!\");\n-    }\n-  };\n-\n-  return (\n-    <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n-      <Button title=\"Mostrar Interstitial\" onPress={showAd} />\n-    </View>\n-  );\n-}\n-import { useEffect, useState } from \"react\";\n-import { View, Button, Alert } from \"react-native\";\n-import {\n-  InterstitialAd,\n-  AdEventType,\n-  TestIds,\n-} from \"react-native-google-mobile-ads\";\n-import { adUnitIdInterstitial } from \";\n-\n-// Se quiser testar, use TestIds.INTERSTITIAL\n-const interstitial = InterstitialAd.createForAdRequest(\n-  adUnitIdInterstitial || TestIds.INTERSTITIAL,\n-  {\n-    requestNonPersonalizedAdsOnly: true,\n-  }\n-);\n-\n-export default function AdInterstitial() {\n-  const [loaded, setLoaded] = useState(false);\n-\n-  useEffect(() => {\n-    const unsubscribeLoaded = interstitial.addAdEventListener(\n-      AdEventType.LOADED,\n-      () => {\n-        setLoaded(true);\n-      }\n-    );\n-\n-    const unsubscribeClosed = interstitial.addAdEventListener(\n-      AdEventType.CLOSED,\n-      () => {\n-        setLoaded(false);\n-        interstitial.load(); // recarrega automaticamente depois que fecha\n-      }\n-    );\n-\n-    // Carrega o primeiro anúncio\n-    interstitial.load();\n-\n-    return () => {\n-      unsubscribeLoaded();\n-      unsubscribeClosed();\n-    };\n-  }, []);\n-\n-  const showAd = () => {\n-    if (loaded) {\n-      interstitial.show();\n-    } else {\n-      Alert.alert(\"Anúncio ainda não carregado!\");\n-    }\n-  };\n-\n-  return (\n-    <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n-      <Button title=\"Mostrar Interstitial\" onPress={showAd} />\n-    </View>\n-  );\n-}\n"
                }
            ],
            "date": 1759097146727,
            "name": "Commit-0",
            "content": "import { useEffect, useState } from \"react\";\nimport { View, Button, Alert } from \"react-native\";\nimport {\n  InterstitialAd,\n  AdEventType,\n  TestIds,\n} from \"react-native-google-mobile-ads\";\nimport { adUnitIdInterstitial } from \"../../services/adMobService/AdMobService\";\n\n// Se quiser testar, use TestIds.INTERSTITIAL\nconst interstitial = InterstitialAd.createForAdRequest(\n  adUnitIdInterstitial || TestIds.INTERSTITIAL,\n  {\n    requestNonPersonalizedAdsOnly: true,\n  }\n);\n\nexport default function AdInterstitial() {\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    const unsubscribeLoaded = interstitial.addAdEventListener(\n      AdEventType.LOADED,\n      () => {\n        setLoaded(true);\n      }\n    );\n\n    const unsubscribeClosed = interstitial.addAdEventListener(\n      AdEventType.CLOSED,\n      () => {\n        setLoaded(false);\n        interstitial.load(); // recarrega automaticamente depois que fecha\n      }\n    );\n\n    // Carrega o primeiro anúncio\n    interstitial.load();\n\n    return () => {\n      unsubscribeLoaded();\n      unsubscribeClosed();\n    };\n  }, []);\n\n  const showAd = () => {\n    if (loaded) {\n      interstitial.show();\n    } else {\n      Alert.alert(\"Anúncio ainda não carregado!\");\n    }\n  };\n\n  return (\n    <View style={{ alignItems: \"center\", marginVertical: 10 }}>\n      <Button title=\"Mostrar Interstitial\" onPress={showAd} />\n    </View>\n  );\n}\n"
        }
    ]
}